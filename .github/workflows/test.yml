name: test

on:
  pull_request:
  push:
    branches: [main]
  workflow_call:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  UV_VERSION: "0.4.x"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}

      - id: set-matrix
        run: |
          uv run nox --session "gha_matrix"

  test:
    name: Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}

      - name: Run tests
        run: |
          uv run nox --session "tests(python='${{ matrix.python-version }}', django='${{ matrix.django-version }}')"

  tests:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: OK
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Fail
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  integration:
    runs-on: ubuntu-latest
    environment: integration
    if: secrets.TEST_PRIVATE_KEY != ''
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}

      - name: Run tests with integration tests enabled
        env:
          TEST_ACCOUNT_NAME: ${{ vars.TEST_ACCOUNT_NAME }}
          TEST_ACCOUNT_TYPE: ${{ vars.TEST_ACCOUNT_TYPE }}
          TEST_APP_ID: ${{ vars.TEST_APP_ID }}
          TEST_CLIENT_ID: ${{ vars.TEST_CLIENT_ID }}
          TEST_INSTALLATION_ID: ${{ vars.TEST_INSTALLATION_ID }}
          TEST_NAME: ${{ vars.TEST_NAME }}
          TEST_PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
          TEST_WEBHOOK_SECRET: ${{ secrets.TEST_WEBHOOK_SECRET }}
        run: |
          uv run nox --session "test" -- --integration

  types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}

      - name: Run type checks
        run: |
          uv run nox --session "types"

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.UV_VERSION }}

      - name: Generate code coverage
        run: |
          uv run nox --session "coverage"
